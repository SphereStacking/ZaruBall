//#include <dt-bindings/zmk/mouse.h>

#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define MOUSE 4
#define SCROLL 1

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mt LEFT_ALT LANG2>, <&mo 2>, <&mo 4>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mt RIGHT_CONTROL LANG1>, <&mo 2>, <&mo 0>;
        };
    };
};

&sl { release-after-ms = <250>; }; // time needed for double click (for mkp_exit_AML)
/ {
    macros {
        // When in AML, move to default layer when key (except mouse button) pressed

        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_layer_0";
        };

        // When LCLK pressed, exit AML (after 250ms cause by sticky layer)

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        // Support swapping into Scroll layer when AML is activated

        to_scroll_layer: to_scroll_layer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&to 1>,
                <&macro_press>,
                <&mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "Base";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&kp ESC       &kp N1  &kp N2      &kp N3    &kp N4     &kp N5                           &kp NUMBER_6  &kp N7    &kp N8  &kp N9  &kp N0  &kp SLASH
&kp TAB       &kp Q   &kp L       &kp U     &kp COMMA  &kp PERIOD                       &kp F         &kp W     &kp R   &kp Y   &kp P   &lt 4 INSERT
&kp LEFT_ALT  &kp E   &kp I       &kp A     &kp O      &kp MINUS      &kp EQUAL         &kp LBKT      &kp K     &kp T   &kp N   &kp S   &kp H         &lt 2 GRAVE
&kp LSHFT     &kp Z   &kp X       &kp C     &kp V      &kp SEMICOLON  &kp SQT           &kp RBKT      &kp G     &kp D   &kp M   &kp J   &kp B         &lt 1 BACKSLASH
&td0                  &kp C_MUTE  &kp LWIN  &kp LCTRL  &kp SPACE      &to_scroll_layer  &lt 2 RET     &kp BSPC                          &td1
            >;
        };

        lower_layer {
            display-name = "Lower";
            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
            bindings = <
&trans  &kp F1   &kp F2     &kp F3    &kp F4     &kp F5               &kp LA(F2)  &kp KP_N7     &kp KP_N8   &kp KP_N9  &kp KP_SLASH     &kp KP_NUMLOCK
&trans  &kp F6   &kp F7     &kp F8    &kp F9     &kp F10              &kp LA(F1)  &kp KP_N4     &kp KP_N5   &kp KP_N6  &kp KP_MULTIPLY  &none
&trans  &kp F11  &kp F12    &kp UP    &none      &kp HOME  &kp PG_UP  &kp LPAR    &kp C_VOL_UP  &kp KP_N1   &kp KP_N2  &kp KP_N3        &kp KP_MINUS    &none
&trans  &none    &kp LEFT   &kp DOWN  &kp RIGHT  &kp END   &kp PG_DN  &kp RPAR    &kp C_VOL_DN  &kp KP_DOT  &kp KP_N0  &kp KP_EQUAL     &kp KP_PLUS     &none
&trans           &kp RSHFT  &trans    &trans     &trans    &trans     &trans      &kp DEL                                               &studio_unlock
            >;
        };

        raise_layer {
            display-name = "Raise";
            sensor-bindings = <&inc_dec_kp LA(F2) LA(F1)>;
            bindings = <
&trans  &none  &none  &none      &none      &none                            &none      &none           &none         &none            &none  &none
&trans  &none  &none  &none      &none      &none                            &none      &kp LEFT_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&trans  &none  &none  &mkp RCLK  &mkp LCLK  &msc SCRL_UP    &msc SCRL_LEFT   &kp PG_UP  &kp HOME        &none         &kp DOWN_ARROW   &none  &none   &none
&trans  &none  &none  &mkp MB4   &mkp MB5   &msc SCRL_DOWN  &msc SCRL_RIGHT  &kp PG_DN  &kp END         &none         &none            &none  &none   &none
&trans         &none  &trans     &trans     &trans          &trans           &trans     &kp DEL                                               &trans
            >;
        };

        adjust_layer {
            display-name = "Adjust";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &bt BT_CLR_ALL  &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none                 &bt BT_CLR      &none           &none  &none  &none  &none
&trans  &none         &none         &none         &none         &none         &none   &none           &out OUT_TOG    &none  &none  &none  &none   &none
&trans  &none         &none         &none         &none         &none         &none   &none           &studio_unlock  &none  &none  &none  &none   &none
&trans                &kp C_MUTE    &trans        &trans        &trans        &trans  &trans          &kp DEL                              &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            bindings = <
&to_layer_0 ESC     &to_layer_0 N1  &to_layer_0 N2  &to_layer_0 N3  &to_layer_0 N4     &to_layer_0 N5                         &to_layer_0 N6    &to_layer_0 N7  &to_layer_0 N8  &to_layer_0 N9  &to_layer_0 N0  &to_layer_0 MINUS
&to_layer_0 TAB     &to_layer_0 Q   &to_layer_0 L   &to_layer_0 U   &to_layer_0 COMMA  &to_layer_0 PERIOD                     &to_layer_0 F     &to_layer_0 W   &mkp MCLK       &mkp RCLK       &to_layer_0 P   &to_layer_0 INS
&to_layer_0 CAPS    &to_layer_0 E   &to_layer_0 I   &to_layer_0 A   &to_layer_0 O      &to_layer_0 MINUS   &to_layer_0 EQUAL  &to_layer_0 LBKT  &to_layer_0 K   &mkp LCLK       &to_layer_0 N   &to_layer_0 S   &to_layer_0 H      &to_layer_0 GRAVE
&to_layer_0 LSHIFT  &to_layer_0 Z   &to_layer_0 X   &to_layer_0 C   &to_layer_0 V      &to_layer_0 SEMI    &to_layer_0 SQT    &to_layer_0 RBKT  &to_layer_0 G   &mkp MB4        &mkp MB5        &to_layer_0 J   &to_layer_0 B      &to_layer_0 NON_US_BACKSLASH
&trans                              &trans          &trans          &trans             &trans              &trans             &trans            &trans                                                          &trans
            >;
        };

        // Extra layer can be added in ZMK STUDIO

        extra1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };

        extra2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
